// üçè  Cette classe, g√©n√©r√©e automatiquement par Spring Boot, est le point de d√©marrage de l'application

//  Elle lance, entre autres, la classe SpringApplication, responsable du d√©marrage de l'application Spring.
//  Cette classe va cr√©er ApplicationContext dans lequel iront toutes les configurations g√©n√©r√©es automatiquement
//  ou ajout√©es par vos soins

// üçé Important ici, c'est l'annotation @SpringBootApplication, qui est une encapsulation de trois annotations :

// @Configuration : donne √† la classe actuelle la possibilit√© de d√©finir des configurations qui iront remplacer
//                  les traditionnels fichiers XML. Ces configurations se font via des Beans.

// @EnableAutoConfiguration : l'annotation vue pr√©c√©demment qui permet, au d√©marrage de Spring, de g√©n√©rer a
//              utomatiquement les configurations n√©cessaires en fonction des d√©pendances situ√©es dans notre classpath.

// @ComponentScan : indique qu'il faut scanner les classes de ce package afin de trouver des Beans de configuration.



package com.ecommerce.microcommerce;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@SpringBootApplication
@EnableSwagger2
public class MicrocommerceApplication {

	public static void main(String[] args) {
		SpringApplication.run(MicrocommerceApplication.class, args);
	}

}
